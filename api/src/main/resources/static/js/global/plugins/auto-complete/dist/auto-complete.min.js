!function (t) {
    t.fn.extend({
        gAuto: function (o) {
            function e(o) {
                var e = c.data("reqUrl"), a = c.val().trim();
                t.ajax({
                    type: "POST",
                    url: void 0 == e ? h.basePath + h.url : e,
                    dataType: "json",
                    data: {keyword: a, flag: c.data("gautoflag"), isShowAll: o},
                    error: function () {
                        y.html("<i class='fa fa-exclamation-triangle'></i><span> " + t.gAuto.i18n.dataReturnError + "</span>")
                    },
                    success: function (e) {
                        "" != e ? (C = e.length, C > 10 && m.css({
                            height: m.height(),
                            overflowY: "scroll"
                        }), y[0].innerHTML = d(e, a, o), g = m.find("div.item-div"), m.show(), c.focus(), l(), v = 0, p = g.eq(0), u(void 0, p)) : (y.html("<i class='fa fa-exclamation-triangle'></i><span> " + t.gAuto.i18n.dataNotFound + "</span>"), C = 0)
                    }
                })
            }

            function a() {
                m.removeClass().addClass("div-auto").css({
                    left: c.offset().left,
                    top: c.offset().top + c.outerHeight(),
                    height: "240px",
                    overflowY: "auto",
                    paddingLeft: 0
                });
                var t = c.data("autoClass");
                t && m.addClass(t);
                var o = "0", e = "0";
                void 0 != c.css("paddingLeft") && (o = c.css("paddingLeft").replace("px", "")), void 0 != c.css("paddingRight") && (e = c.css("paddingRight").replace("px", ""));
                var a = parseFloat(c.width()) + parseFloat(o) + parseFloat(e);
                m.width() < a && m.width(a), A = c.offset().top + c.outerHeight()
            }

            function i(o) {
                "" != c.val() ? o != t.gAuto.keyCode.RIGHT && o != t.gAuto.keyCode.DOWN && o != t.gAuto.keyCode.LEFT && o != t.gAuto.keyCode.UP && o != t.gAuto.keyCode.ENTER && o != t.gAuto.keyCode.CONTROL && o != t.gAuto.keyCode.TAB && (s(""), "none" == m[0].style.display && m.show(), y.html("<span class='auo-text-loading'>" + t.gAuto.i18n.loading + "…</span>"), e(!1)) : (m.hide(), s(""))
            }

            function n(o, e) {
                o != t.gAuto.keyCode.RIGHT && o != t.gAuto.keyCode.DOWN || (v = v + 1 >= C ? 0 : v + 1, f = g.eq(v), u(p, f), m.scrollTop(20 * (v - 11))), o != t.gAuto.keyCode.LEFT && o != t.gAuto.keyCode.UP || (v = v < 1 ? C - 1 : v - 1, f = g.eq(v), u(p, f), m.scrollTop(20 * (v - 11))), o != t.gAuto.keyCode.ENTER && o != t.gAuto.keyCode.TAB || (e.preventDefault(), f = p, 0 != C && u(void 0, p, !0), m.hide()), p = f
            }

            function l() {
                t("#isShowAll").off(".auto-complete").on("mousedown.auto-complete", function () {
                    y.html("<span class='auo-text-loading'>" + t.gAuto.i18n.loading + "…</span>"), e(!0)
                }), g.hover(function () {
                    p = t(this), u(g.eq(v), p), v = g.index(this)
                }, function () {
                    u(t(this))
                }).off(".auto-complete").on("mousedown.auto-complete", function () {
                    u(void 0, t(this), !0), m.hide()
                })
            }

            function d(o, e, a) {
                for (var i = "", n = 0; n < o.length; n++) {
                    e = e.replace(/\\/g, "\\\\").replace(/\[/g, "\\[").replace(/\]/g, "\\]").replace(/\(/g, "\\(").replace(/\)/g, "\\)").replace(/\</g, "\\<").replace(/\>/g, "\\>").replace(/\{/g, "\\{").replace(/\}/g, "\\}").replace(/\|/g, "\\|").replace(/\?/g, "\\?");
                    var l = o[n].name.replace(new RegExp(e + "", "i"), "<b><span style='color:red'>$&</span></b>");
                    i = i + "<div class='item-div' data-str-id='" + o[n].id + "'>" + l + "</div>"
                }
                return !a && h.hasShowAllBtn && (i = i + "<div class='show-all-div'><a id='isShowAll' class='auto-text-btn'>" + t.gAuto.i18n.showAll + "</a></div>"), i
            }

            function u(t, o, e) {
                t && t.css({background: "#FFFFFF"}), void 0 !== o && (o.css({background: "#FBEC88"}), e && (c.val(o.text()), s(o.data("strId")), h.selectedCallback && h.selectedCallback(c)))
            }

            function s(t) {
                c.setGAutoHiddenValue(t)
            }

            function r() {
                return 0 == t("#autoTipDiv").size() && t("body").append("<div id='autoTipDiv' class='auto-tip-div'><iframe style='position:absolute; z-index:-1;width:110px;' frameborder='0' src='about:blank'></iframe><div id='autoTipImg'></div></div>"), t("#autoTipDiv").hover(function () {
                    T = !1
                }, function () {
                    T = !0
                }).off(".auto-complete").on("scroll.auto-complete", function () {
                    c && c.focus()
                })
            }

            var c, p, f, g, A, h = t.extend(!0, {}, t.fn.gAuto.defaults, o), v = 0, C = 0, T = !0, m = r(),
                y = t("#autoTipImg");
            if (t(this).off(".auto-complete").on("keydown.auto-complete keyup.auto-complete blur.auto-complete", function (o) {
                    if (c = t(this), !c.prop("readonly")) {
                        c.attr("autocomplete", "off"), a();
                        var e = o.which, l = o.type;
                        if ("keydown" == l && "none" != m[0].style.display && n(e, o), "keyup" == l) {
                            if (o.ctrlKey) return;
                            i(e)
                        }
                        "blur" == l && T && ("" == c.val() && s(""), m.hide())
                    }
                }), h.staticWithScroll) {
                var E = t(document).scrollTop();
                t(window).scroll(function () {
                    var o = t(document).scrollTop(), e = o - E;
                    e > 0 ? m.css("top", A + e) : (m.css("top", A - e), E = o)
                })
            }
            return this
        }, getGAutoHiddenValue: function () {
            return this.data("hiddenValue")
        }, setGAutoHiddenValue: function (t) {
            return this.data("hiddenValue", t)
        }
    }), t.fn.gAuto.defaults = {
        hasShowAllBtn: !0,
        staticWithScroll: !1,
        selectedCallback: null,
        basePath: "",
        url: "autoComplete"
    }, t.gAuto = function () {
        t("input[data-gautoflag]").gAuto()
    }, t.gAuto.i18n = {
        loading: "Loading",
        showAll: "Show All",
        dataReturnError: "The returned data is error!",
        dataNotFound: "Data is not found!"
    }, t.gAuto.keyCode = {
        ALT: 18,
        BACKSPACE: 8,
        CAPS_LOCK: 20,
        COMMA: 188,
        COMMAND: 91,
        COMMAND_LEFT: 91,
        COMMAND_RIGHT: 93,
        CONTROL: 17,
        DELETE: 46,
        DOWN: 40,
        END: 35,
        ENTER: 13,
        ESCAPE: 27,
        HOME: 36,
        INSERT: 45,
        LEFT: 37,
        MENU: 93,
        NUMPAD_ADD: 107,
        NUMPAD_DECIMAL: 110,
        NUMPAD_DIVIDE: 111,
        NUMPAD_ENTER: 108,
        NUMPAD_MULTIPLY: 106,
        NUMPAD_SUBTRACT: 109,
        PAGE_DOWN: 34,
        PAGE_UP: 33,
        PERIOD: 190,
        RIGHT: 39,
        SHIFT: 16,
        SPACE: 32,
        TAB: 9,
        UP: 38,
        F7: 118,
        F12: 123,
        S: 83,
        WINDOWS: 91
    }
}(jQuery);